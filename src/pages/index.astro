---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPostCard from '../components/ui/BlogPostCard.astro';
import ActionCard from '../components/ui/ActionCard.astro';

// Get the latest blog post for the homepage
const blogPosts = await getCollection('blog');
const latestPost = blogPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())[0];
---

<BaseLayout
  title="Bruce Denham - Senior Technical Writer & Developer Experience Strategist"
  description="Senior Technical Writer & Developer Experience Strategist at Adobe with 30+ years turning complex concepts into clear developer experiences."
  footerText="Thanks for visiting! Let's build better developer experiences together."
>
  <h1 id="main-title"><span>Bruce</span> Denham</h1>
  <p class="subtitle homepage">Senior Technical Writer & Developer Experience Strategist</p>
  <p class="lead">
    I turn complex concepts into clear, human experiences. With 30+ years in docs, dev, and design,
    I help developers learn fast, build smart, and ship with confidence.
  </p>
  <p class="lead">
    At Adobe, I've built developer and SDK docs, CLI tools, React apps, interactive playgrounds and
    custom search systems — all built to reduce friction and spark "aha" moments.
  </p>

  <div class="action-cards grid-medium grid-with-margin">
    <ActionCard
      variant="primary"
      icon="📋"
      title="My Resume"
      description="Explore my 30+ years of experience in technical writing and developer experience"
      href="/resume/"
      ariaLabel="View my complete resume"
    />

    <ActionCard
      icon="🛠️"
      title="My Work"
      description="SDK docs, CLI tools, React apps, and developer experience projects at Adobe and beyond"
      href="/work/"
      ariaLabel="View my professional work and projects"
    />

    <ActionCard
      icon="📝"
      title="My Blog"
      description="Insights on developer experience, API documentation, and making complex concepts clear"
      href="/blog/"
      ariaLabel="Read my blog"
    />

    <ActionCard
      icon="👨‍💻"
      title="About Me"
      description="Learn about my journey from Schlumberger to TOPAZ to Adobe as a developer experience strategist"
      href="/about/"
      ariaLabel="Learn more about my background"
    />
  </div>

  <div class="section">
    <h2>My Philosophy</h2>
    <p>
      I don't just write the docs. I build tools, craft interfaces, and create explanations that
      click. I code. I design. I connect. My mission is helping developers have those "aha" moments
      that turn complexity into clarity and frustration into flow.
    </p>
  </div>

  <div class="section">
    <h2>Latest BlogPosts</h2>
    {latestPost && <BlogPostCard post={latestPost} />}
  </div>

  <div class="recent-posts-section">
    <h2>LinkedIn Posts & Insights</h2>
    <p class="posts-intro">
      Sharing thoughts on developer experience, visual communication, and the intersection of
      technology and humanity.
    </p>

    <div class="linkedin-posts grid-large grid-with-bottom-margin">
      <div class="linkedin-post featured">
        <div class="post-header">
          <div class="platform-info">
            <div class="platform-icon">💼</div>
            <div class="platform-text">
              <span class="platform-name">LinkedIn</span>
              <span class="post-type">Creative Post</span>
            </div>
          </div>
          <div class="post-date">Recent</div>
        </div>
        <div class="post-content">
          <h3>The Science of Kindness</h3>
          <p>
            "What if kindness moved like diffusion—not with force, but with grace, filling absence
            with abundance, and longing with love? Let what's full in you flow where it's needed.
            That's how the world softens."
          </p>
          <div class="post-details">
            <span class="post-tag">Animation</span>
            <span class="post-tag">Kindness</span>
            <span class="post-tag">Visual Communication</span>
          </div>
        </div>
        <div class="post-link">
          <a
            href="https://www.linkedin.com/feed/update/urn:li:activity:7329128517764337665/"
            target="_blank"
            rel="noopener noreferrer"
            class="post-cta"
          >
            View on LinkedIn →
          </a>
        </div>
      </div>

      <div class="linkedin-post">
        <div class="post-header">
          <div class="platform-info">
            <div class="platform-icon">💼</div>
            <div class="platform-text">
              <span class="platform-name">LinkedIn</span>
              <span class="post-type">Professional Update</span>
            </div>
          </div>
          <div class="post-date">Recent</div>
        </div>
        <div class="post-content">
          <h3>Developer Experience Insights</h3>
          <p>
            Exploring how thoughtful design and clear communication transform complex technical
            concepts into accessible developer experiences that actually work.
          </p>
          <div class="post-details">
            <span class="post-tag">Developer Experience</span>
            <span class="post-tag">Technical Writing</span>
          </div>
        </div>
        <div class="post-link">
          <a
            href="https://www.linkedin.com/feed/update/urn:li:activity:7326230647159619585/"
            target="_blank"
            rel="noopener noreferrer"
            class="post-cta"
          >
            View on LinkedIn →
          </a>
        </div>
      </div>

      <div class="linkedin-post">
        <div class="post-header">
          <div class="platform-info">
            <div class="platform-icon">💼</div>
            <div class="platform-text">
              <span class="platform-name">LinkedIn</span>
              <span class="post-type">Community Engagement</span>
            </div>
          </div>
          <div class="post-date">Recent</div>
        </div>
        <div class="post-content">
          <h3>Building Better Documentation</h3>
          <p>
            Sharing thoughts on creating documentation that doesn't just inform—but transforms
            confusion into confidence and complexity into clarity for developers worldwide.
          </p>
          <div class="post-details">
            <span class="post-tag">Documentation</span>
            <span class="post-tag">Adobe</span>
          </div>
        </div>
        <div class="post-link">
          <a
            href="https://www.linkedin.com/feed/update/urn:li:activity:7326968144617492480/"
            target="_blank"
            rel="noopener noreferrer"
            class="post-cta"
          >
            View on LinkedIn →
          </a>
        </div>
      </div>
    </div>

    <div class="linkedin-cta">
      <p>
        Follow my journey on LinkedIn for more insights on technical writing, developer experience,
        and visual communication.
      </p>
      <a
        href="https://linkedin.com/in/brucedenham/"
        target="_blank"
        rel="noopener noreferrer"
        class="linkedin-follow-btn"
      >
        Follow on LinkedIn →
      </a>
    </div>
  </div>

  <div class="footer-links">
    <a href="/resume/">Resume</a>
    <a href="/work/">My Work</a>
    <a href="/about/">About</a>
    <a href="/blog/">Blog</a>
  </div>
</BaseLayout>

<!-- DEBUG: Monitor what's changing the layout -->
<script>
  function debugLayout() {
    const appContent = document.querySelector('.app-content');
    const mainContainer = document.querySelector('.main-container');
    const contentPanel = document.querySelector('.content-panel');

    if (appContent) {
      const rect = appContent.getBoundingClientRect();
      console.log('App content position:', {
        top: rect.top,
        left: rect.left,
        transform: getComputedStyle(appContent).transform,
        marginTop: getComputedStyle(appContent).marginTop,
        paddingTop: getComputedStyle(appContent).paddingTop,
        position: getComputedStyle(appContent).position,
      });
    }

    if (mainContainer) {
      const rect = mainContainer.getBoundingClientRect();
      console.log('Main container position:', {
        top: rect.top,
        left: rect.left,
        transform: getComputedStyle(mainContainer).transform,
        marginTop: getComputedStyle(mainContainer).marginTop,
        paddingTop: getComputedStyle(mainContainer).paddingTop,
        position: getComputedStyle(mainContainer).position,
      });
    }

    if (contentPanel) {
      const rect = contentPanel.getBoundingClientRect();
      console.log('Content panel position:', {
        top: rect.top,
        left: rect.left,
        transform: getComputedStyle(contentPanel).transform,
        marginTop: getComputedStyle(contentPanel).marginTop,
        paddingTop: getComputedStyle(contentPanel).paddingTop,
        position: getComputedStyle(contentPanel).position,
      });
    }
  }

  // Log immediately
  debugLayout();

  // Log after DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      console.log('After DOMContentLoaded:');
      debugLayout();
    });
  }

  // ELEGANT FIX: Disable browser scroll restoration and reset position once
  if ('scrollRestoration' in history) {
    history.scrollRestoration = 'manual';
    console.log('Disabled scroll restoration');
  }

  // Ensure we start at the top
  window.scrollTo(0, 0);

  // Single clean fix after page loads
  function cleanPositionFix() {
    console.log('Running clean position fix');
    debugLayout();

    // Only fix if needed
    const appContent = document.querySelector('.app-content');
    if (appContent) {
      const rect = appContent.getBoundingClientRect();
      if (rect.top < -10) {
        // Only fix if significantly off
        console.log('Applying minimal position correction');
        appContent.style.position = 'relative';
        appContent.style.top = '0';
        appContent.style.marginTop = '0';
      }
    }
  }

  // Run once after DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', cleanPositionFix);
  } else {
    cleanPositionFix();
  }
</script>

<style>
  /* FIX THE ROOT CAUSE: app-content is positioned at top: -40 */
  .app-content {
    margin-left: 280px !important;
    margin-top: 0 !important;
    padding-top: 0 !important;
    position: relative !important;
    top: 0 !important;
    transform: none !important;
  }

  .main-container {
    max-width: 900px !important;
    margin: 0 auto !important;
    padding: 80px 32px 32px 32px !important;
    position: relative !important;
    top: 0 !important;
    transform: none !important;
  }

  .content-panel {
    background: var(--bg-tertiary) !important;
    border-radius: 20px !important;
    padding: 40px !important;
    margin: 0 0 32px 0 !important;
    border: 1px solid var(--border-secondary) !important;
    box-shadow: 0 8px 32px var(--shadow-secondary) !important;
    position: relative !important;
    top: 0 !important;
    transform: none !important;
  }

  /* Mobile override */
  @media (max-width: 1023px) {
    .app-content {
      margin-left: 0 !important;
    }

    .main-container {
      padding: 80px 20px 20px 20px !important;
    }

    .content-panel {
      padding: 18px 20px !important;
    }
  }

  /* Homepage-specific styles only */
  .platform-info {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .platform-icon {
    font-size: 1.2rem;
  }

  .platform-text {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .platform-name {
    color: var(--text-primary);
    font-size: 14px;
    font-weight: 600;
  }

  .post-type {
    color: var(--text-muted);
    font-size: 12px;
  }

  .post-date {
    color: var(--text-muted);
    font-size: 12px;
    font-weight: 500;
  }

  .post-content h3 {
    color: var(--text-primary);
    font-size: 18px;
    margin: 0 0 12px 0;
  }

  .post-content p {
    color: var(--text-tertiary);
    line-height: 1.6;
    margin: 0 0 16px 0;
    font-weight: 300;
  }

  .post-details {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    margin-bottom: 16px;
  }

  .post-link {
    margin-top: auto;
  }

  /* Mobile responsive for LinkedIn posts */
  @media (max-width: 640px) {
    .post-details {
      gap: 4px;
    }
  }
</style>
