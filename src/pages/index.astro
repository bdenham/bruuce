---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPostCard from '../components/ui/BlogPostCard.astro';
import ActionCard from '../components/ui/ActionCard.astro';

// Get the latest 2 blog posts for the homepage
const blogPosts = await getCollection('blog');
const latestPosts = blogPosts
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, 2);
---

<BaseLayout
  title="Bruce Denham | Adobe Award-Nominated Technical Writer & DX Engineer"
  description="üèÜ Adobe award nominee with 30+ years transforming complex technical concepts into clear developer experiences. Expert in API docs, SDK documentation, and developer tools at Adobe."
  footerText="Thanks for visiting! Let's build better developer experiences together."
>
  <h1 id="main-title"><span>Bruce</span> Denham</h1>
  <p class="subtitle homepage">Senior Technical Writer & DX Engineer</p>
  <p class="lead">
    üèÜ <strong>Adobe award nominee</strong> with 30+ years turning complex concepts into clear, human
    experiences. I try tohelp developers learn fast, build smart, and focus on what matters.
  </p>
  <!-- <p class="lead">
    At Adobe, I've built developer and SDK docs, CLI tools, React apps, interactive playgrounds and
    custom search systems ‚Äî all built to reduce friction and spark "aha" moments.
  </p> -->

  <!-- Performance Achievement Highlight -->
  <div class="performance-highlight">
    <div class="performance-header">
      <h2>‚ö° Performance Excellence</h2>
      <p>Sub-second performance with exceptional user experience across all devices.</p>
    </div>
    <div class="metrics-grid">
      <!-- Flattened DOM structure for performance -->
      <div class="lh-score" data-score="100" data-label="Performance">
        <svg viewBox="0 0 120 120">
          <circle class="lh-base" r="56" cx="60" cy="60" stroke-width="8"></circle>
          <circle
            class="lh-arc"
            r="56"
            cx="60"
            cy="60"
            stroke-width="8"
            style="stroke-dasharray: 351.858, 351.858;"></circle>
        </svg>
        <span class="lh-num">100</span>
        <span class="lh-label">Performance</span>
      </div>
      <div class="lh-score" data-score="100" data-label="Accessibility">
        <svg viewBox="0 0 120 120">
          <circle class="lh-base" r="56" cx="60" cy="60" stroke-width="8"></circle>
          <circle
            class="lh-arc"
            r="56"
            cx="60"
            cy="60"
            stroke-width="8"
            style="stroke-dasharray: 351.858, 351.858;"></circle>
        </svg>
        <span class="lh-num">100</span>
        <span class="lh-label">Accessibility</span>
      </div>
      <div class="lh-score" data-score="100" data-label="Best Practices">
        <svg viewBox="0 0 120 120">
          <circle class="lh-base" r="56" cx="60" cy="60" stroke-width="8"></circle>
          <circle
            class="lh-arc"
            r="56"
            cx="60"
            cy="60"
            stroke-width="8"
            style="stroke-dasharray: 351.858, 351.858;"></circle>
        </svg>
        <span class="lh-num">100</span>
        <span class="lh-label">Best Practices</span>
      </div>
      <div class="lh-score" data-score="100" data-label="SEO">
        <svg viewBox="0 0 120 120">
          <circle class="lh-base" r="56" cx="60" cy="60" stroke-width="8"></circle>
          <circle
            class="lh-arc"
            r="56"
            cx="60"
            cy="60"
            stroke-width="8"
            style="stroke-dasharray: 351.858, 351.858;"></circle>
        </svg>
        <span class="lh-num">100</span>
        <span class="lh-label">SEO</span>
      </div>
      <div class="performance-metrics">
        <div class="metric-item"><span class="metric-value">~0.3s</span><br />Desktop Load</div>
        <div class="metric-item"><span class="metric-value">~1.0s</span><br />Mobile Load</div>
        <div class="metric-item"><span class="metric-value">0ms</span><br />Blocking Time</div>
        <div class="metric-item"><span class="metric-value">0</span><br />Layout Shift</div>
      </div>
    </div>
    <a
      href="https://pagespeed.web.dev/analysis?url=https://bruuce.com"
      target="_blank"
      rel="noopener noreferrer"
      class="performance-cta"
    >
      <small>
        <span class="percentile-text">Consistently top 1% web performance</span> ‚Ä¢
        <span class="verify-text">Verify on PageSpeed Insights ‚Üó</span>
      </small>
    </a>
  </div>

  <div class="action-cards grid-medium grid-with-margin lazy-cards">
    <ActionCard
      icon="üìã"
      title="My Resume"
      description="Explore my 30+ years of experience in technical writing and developer experience"
      href="/resume/"
      ariaLabel="View my complete resume"
    />

    <ActionCard
      icon="üõ†Ô∏è"
      title="My Work"
      description="SDK docs, CLI tools, React apps, and developer experience projects at Adobe and beyond"
      href="/work/"
      ariaLabel="View my professional work and projects"
    />

    <ActionCard
      icon="üìù"
      title="My Blog"
      description="Insights on developer experience, API documentation, and making complex concepts clear"
      href="/blog/"
      ariaLabel="Read my blog"
    />

    <ActionCard
      icon="üë®‚Äçüíª"
      title="About Me"
      description="Learn about my journey from Schlumberger to TOPAZ to Adobe as a developer experience strategist"
      href="/about/"
      ariaLabel="Learn more about my background"
    />
  </div>

  <div class="section">
    <h2>My Philosophy</h2>
    <p>
      I don't just write the docs. I build tools, craft interfaces, and create explanations that
      click. I code. I design. I connect. My mission is helping developers have those "aha" moments
      that turn complexity into clarity and frustration into flow.
    </p>
  </div>

  <div class="section">
    <h2>Recent Posts</h2>
    <div class="blog-posts-container">
      {
        latestPosts.map((post, index) => (
          <div class={`blog-post-wrapper ${index > 0 ? 'lazy-load' : ''}`}>
            <BlogPostCard post={post} />
          </div>
        ))
      }
    </div>
  </div>

  <div class="footer-links">
    <a href="/resume/">Resume</a>
    <a href="/work/">My Work</a>
    <a href="/about/">About</a>
    <a href="/blog/">Blog</a>
  </div>
</BaseLayout>

<!-- Minimal scroll position optimization -->
<script>
  // Only set scroll restoration once to prevent accumulation
  if ('scrollRestoration' in history && history.scrollRestoration !== 'manual') {
    history.scrollRestoration = 'manual';
  }

  // Ensure page starts at top without forced reflows
  window.scrollTo(0, 0);
</script>

<style>
  /* FIX THE ROOT CAUSE: app-content is positioned at top: -40 */
  .app-content {
    margin-left: 280px !important;
    margin-top: 0 !important;
    padding-top: 0 !important;
    position: relative !important;
    top: 0 !important;
    transform: none !important;
  }

  .main-container {
    max-width: 1280px !important; /* AstroWind's max-w-7xl equivalent */
    margin: 0 auto !important;
    padding: 80px 1rem 2rem 1rem !important; /* Responsive padding like AstroWind */
    position: relative !important;
    top: 0 !important;
    transform: none !important;
  }
  
  /* AstroWind-style responsive padding for homepage */
  @media (min-width: 768px) {
    .main-container {
      padding: 80px 1.5rem 2rem 1.5rem !important; /* md:px-6 equivalent */
    }
  }

  .content-panel {
    /* Clean, borderless design - content flows naturally */
    background: transparent !important; /* No background - use page background */
    border: none !important; /* Remove border */
    border-radius: 0 !important; /* Remove rounded corners */
    padding: 0 !important; /* Remove padding - let content breathe naturally */
    margin: 0 auto 32px 0 !important; /* Left-aligned, closer to sidebar */
    box-shadow: none !important; /* Remove shadow */
    position: relative !important;
    top: 0 !important;
    transform: none !important;
    transition: none !important; /* Remove hover effects */
    /* Optimal line length for readability - left-aligned */
    max-width: 75ch !important; /* ~75 characters per line - more generous */
  }

  /* Performance optimizations for blog posts */
  .blog-posts-container {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .blog-post-wrapper.lazy-load {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  .blog-post-wrapper.lazy-load.loaded {
    opacity: 1;
    transform: translateY(0);
  }

  /* Mobile override */
  @media (max-width: 1023px) {
    .app-content {
      margin-left: 0 !important;
    }

    .main-container {
      padding: 80px 1rem 1.25rem 1rem !important; /* Responsive padding like AstroWind */
    }

    .content-panel {
      padding: 0 !important; /* No padding - clean design */
      margin: 0 auto 32px auto !important; /* Center on mobile for better balance */
    }
  }

  /* Performance Highlight Styles */
  .performance-highlight {
    background: linear-gradient(135deg, var(--bg-card), rgba(0, 170, 255, 0.02));
    border: 2px solid rgba(0, 170, 255, 0.2);
    border-radius: 16px;
    padding: 24px;
    margin: 32px 0;
    /* Performance-friendly page load animation */
    opacity: 0;
    transform: translateY(20px);
    animation: slideInUp 500ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
    animation-delay: 75ms;
    /* Allow full width for performance metrics display */
    max-width: none !important;
  }

  .performance-header h2 {
    color: var(--text-primary);
    margin: 0 0 8px 0;
    font-size: 20px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 8px;
    border-bottom: none;
    padding-bottom: 0;
  }

  .performance-header p {
    color: var(--text-tertiary);
    margin: 0 0 20px 0;
    font-size: 14px;
    font-weight: 400;
  }

  .metrics-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 12px;
    margin-bottom: 16px;
  }

  .metric-item {
    text-align: center;
    padding: 12px;
    background: rgba(0, 170, 255, 0.1);
    border-radius: 8px;
    font-size: 13px;
    line-height: 1;
    margin-bottom: 0;
  }

  .lighthouse-score {
    text-align: center;
    padding: 8px;
    background: rgba(12, 186, 96, 0.1);
    border: 1px solid rgba(12, 186, 96, 0.2);
    border-radius: 8px;
    font-size: 13px;
    font-weight: 600;
    line-height: 1.1;
  }

  .lighthouse-value {
    display: block;
    font-size: 24px;
    font-weight: 500;
    color: #0cba60;
    line-height: 1;
    margin-bottom: 2px;
    font-family: monospace;
  }

  .metric-value {
    display: block;
    font-size: 20px;
    font-weight: 500;
    color: #00aaff;
    line-height: 1;
    margin-bottom: -2px;
    font-family: monospace;
  }

  .performance-cta {
    display: block;
    text-decoration: none;
    text-align: center;
    padding: 12px 16px 8px 16px;
    margin-top: 12px;
    background: rgba(0, 170, 255, 0.1);
    border: 1px solid rgba(0, 170, 255, 0.15);
    border-radius: 16px;
    cursor: pointer;
    transition:
      background-color 0.2s ease,
      border-color 0.2s ease;
  }

  .performance-cta:hover {
    background: rgba(0, 170, 255, 0.08);
    border-color: rgba(0, 170, 255, 0.25);
  }

  .lazy-cards {
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .performance-cta small {
    color: var(--text-secondary);
    font-size: 16px;
    font-weight: 500;
    display: block;
    line-height: 1.4;
  }

  .performance-cta .percentile-text {
    color: #00aaff;
  }

  .performance-cta .verify-text {
    color: #00aaff;
  }

  @media (max-width: 640px) {
    .metrics-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 8px;
    }

    .lighthouse-value {
      font-size: 20px;
      margin-bottom: 1px;
    }

    .metric-value {
      margin-bottom: 1px;
    }
  }

  /* Optimized Lighthouse gauge styles - flattened DOM */
  .lh-score {
    position: relative;
    text-align: center;
    padding: 8px;
    background: rgba(12, 186, 96, 0.1);
    border: 1px solid rgba(12, 186, 96, 0.2);
    border-radius: 8px;
    display: inline-block;
  }

  .lh-score svg {
    width: 60px;
    height: 60px;
    display: block;
    margin: 0 auto;
  }

  .lh-base {
    fill: none;
    stroke: var(--border-color);
    stroke-linecap: round;
  }

  .lh-arc {
    fill: none;
    stroke: #0cce6b;
    stroke-linecap: round;
    transform-origin: 50% 50%;
  }

  /* Pure CSS animation - no JavaScript needed */
  @keyframes gaugeProgress {
    from {
      stroke-dasharray: 0, 351.858;
    }
    to {
      stroke-dasharray: 351.858, 351.858;
    }
  }

  .lh-arc {
    animation: gaugeProgress 1s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    animation-delay: 0.6s;
  }

  .lh-num {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 16px;
    color: var(--text-primary);
    line-height: 1;
    z-index: 1;
    pointer-events: none;
    font-family: monospace;
  }

  .lh-label {
    text-align: center;
    font-size: 12px;
    font-weight: 500;
    color: var(--text-secondary);
    margin-top: 4px;
    display: block;
  }

  .performance-metrics {
    display: contents;
  }

  @media (max-width: 640px) {
    .lh-score svg {
      width: 50px;
      height: 50px;
    }

    .lh-num {
      font-size: 12px;
    }

    .lh-label {
      font-size: 11px;
    }
  }

  /* Homepage-specific styles only - LinkedIn styles moved to blog page */
</style>

<!-- Performance-optimized lazy loading with cleanup -->
<script>
  let lazyLoadExecuted = false;

  function initLazyLoad() {
    // Prevent multiple executions that could cause TBT spikes
    if (lazyLoadExecuted) return;
    lazyLoadExecuted = true;

    // Use requestAnimationFrame instead of setTimeout for better performance
    requestAnimationFrame(() => {
      const cards = document.querySelector('.lazy-cards');
      if (cards) cards.style.opacity = '1';

      document
        .querySelectorAll('.blog-post-wrapper.lazy-load')
        .forEach((el) => el.classList.add('loaded'));
    });
  }

  document.addEventListener('DOMContentLoaded', initLazyLoad);

  // Reset flag on view transitions to allow re-execution on new pages
  document.addEventListener('astro:after-swap', () => {
    lazyLoadExecuted = false;
    initLazyLoad();
  });
</script>
