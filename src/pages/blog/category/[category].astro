---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import BlogPostCard from '../../../components/ui/BlogPostCard.astro';
import PageHeader from '../../../components/ui/PageHeader.astro';
import SEO from '../../../components/SEO.astro';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  const publishedPosts = blogPosts.filter(post => !post.data.draft);
  
  // Get all unique categories
  const categories = [...new Set(publishedPosts.map(post => post.data.category).filter(Boolean))];
  
  return categories.map(category => {
    const categoryPosts = publishedPosts
      .filter(post => post.data.category === category)
      .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
    
    return {
      params: { category: category.toLowerCase().replace(/\s+/g, '-') },
      props: { 
        category, 
        posts: categoryPosts,
        categorySlug: category.toLowerCase().replace(/\s+/g, '-')
      },
    };
  });
}

const { category, posts, categorySlug } = Astro.props;
const postCount = posts.length;
const pageTitle = `${category} Posts - Bruce Denham`;
const pageDescription = `${postCount} blog post${postCount !== 1 ? 's' : ''} about ${category.toLowerCase()}. Insights on ${category.toLowerCase()} from Bruce Denham.`;
---

<BaseLayout
  title={pageTitle}
  description={pageDescription}
  showBackLink={true}
  backLinkText="← Back to Blog"
  backLinkHref="/blog/"
  footerText="Explore more categories! "
  footerLinkText="Browse all posts"
  footerLinkHref="/blog/"
>
  <!-- Enhanced SEO for category page -->
  <SEO
    slot="head"
    title={pageTitle}
    description={pageDescription}
    type="website"
    canonical={`https://bruuce.com/blog/category/${categorySlug}/`}
  />

  <div class="category-page">
    <!-- Category header -->
    <div class="category-header">
      <PageHeader primary={category} accent="Posts" />
      <p class="lead category-description">
        {postCount} post{postCount !== 1 ? 's' : ''} about {category.toLowerCase()}
      </p>
    </div>

    <!-- Category posts -->
    <div class="category-posts">
      {posts.map((post) => (
        <BlogPostCard post={post} showCategory={false} />
      ))}
    </div>

    <!-- Category navigation -->
    <div class="category-navigation">
      <a href="/blog/" class="nav-link">
        ← All Posts
      </a>
      <a href="/blog/tags/" class="nav-link">
        Browse by Tags →
      </a>
    </div>
  </div>
</BaseLayout>

<style>
  .category-page {
    max-width: 100%;
  }

  .category-header {
    margin-bottom: 2rem;
    text-align: left;
  }

  .category-description {
    color: var(--text-secondary);
    font-size: 1.125rem;
    margin-top: 0.5rem;
  }

  .category-posts {
    margin-bottom: 3rem;
  }

  .category-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem 0;
    border-top: 1px solid var(--border-secondary);
    margin-top: 2rem;
  }

  .nav-link {
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.25rem;
    background: var(--bg-card);
    color: var(--text-primary);
    text-decoration: none;
    border: 1px solid var(--border-secondary);
    border-radius: 0.75rem;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    background: var(--bg-card-hover);
    border-color: var(--accent-primary);
    transform: translateY(-1px);
  }

  @media (max-width: 640px) {
    .category-navigation {
      flex-direction: column;
      gap: 1rem;
    }

    .nav-link {
      width: 100%;
      justify-content: center;
    }
  }
</style>
