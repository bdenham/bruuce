---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import PageHeader from '../../../components/ui/PageHeader.astro';
import SEO from '../../../components/SEO.astro';
import Section from '../../../components/ui/Section.astro';
import Grid from '../../../components/ui/Grid.astro';
import Card from '../../../components/ui/Card.astro';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  const publishedPosts = blogPosts.filter((post) => !post.data.draft);

  // Get all unique categories
  const categories = [...new Set(publishedPosts.map((post) => post.data.category).filter(Boolean))];

  return categories.map((category) => {
    // Type assertion: category is guaranteed to be a string from filter(Boolean)
    const categoryName = category as string;
    const categoryPosts = publishedPosts
      .filter((post) => post.data.category === categoryName)
      .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return {
      params: { category: categoryName.toLowerCase().replace(/\s+/g, '-') },
      props: {
        category: categoryName,
        posts: categoryPosts,
        categorySlug: categoryName.toLowerCase().replace(/\s+/g, '-'),
      },
    };
  });
}

const { category, posts, categorySlug } = Astro.props;
// Type assertion: category is guaranteed to be defined from getStaticPaths
const categoryName = category as string;
const postCount = posts.length;
const pageTitle = `${categoryName} Posts - Bruce Denham`;
const pageDescription = `${postCount} blog post${postCount !== 1 ? 's' : ''} about ${categoryName.toLowerCase()}. Insights on ${categoryName.toLowerCase()} from Bruce Denham.`;
---

<BaseLayout
  title={pageTitle}
  description={pageDescription}
  showBackLink={true}
  backLinkText="← Back to Blog"
  backLinkHref="/blog/"
  footerText="Explore more categories! "
  footerLinkText="Browse all posts"
  footerLinkHref="/blog/"
>
  <!-- Enhanced SEO for category page -->
  <SEO
    slot="head"
    title={pageTitle}
    description={pageDescription}
    type="website"
    canonical={`https://bruuce.com/blog/category/${categorySlug}/`}
  />

  <PageHeader primary={categoryName} accent="Posts" class="page-title" />
  <p class="text-large lead animate-in animate-delay-100">
    {postCount} post{postCount !== 1 ? 's' : ''} about {categoryName.toLowerCase()}
  </p>

  <!-- Category posts -->
  <Section class="animate-in animate-delay-150">
    <Grid variant="single" gap="medium">
      {
        posts.map((post) => (
          <Card
            title={post.data.title}
            href={`/blog/${post.slug}/`}
            ariaLabel={`Read: ${post.data.title}`}
          >
            <p class="post-meta">
              {post.data.date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })}
              {post.data.author && post.data.author !== 'Bruce Denham'
                ? ` • by ${post.data.author}`
                : ''}
            </p>
            <p class="post-excerpt">{post.data.excerpt}</p>
          </Card>
        ))
      }
    </Grid>
  </Section>

  <!-- Category navigation -->
  <div class="category-navigation animate-in animate-delay-200">
    <a href="/blog/" class="nav-link"> ← All Posts </a>
    <a href="/blog/tags/" class="nav-link"> Browse by Tags → </a>
  </div>
</BaseLayout>

<style>
  /* Simple styling for blog post content */
  .post-meta {
    color: var(--text-tertiary);
    font-size: 0.9rem;
    margin: 0 0 0.5rem 0;
    font-weight: 400;
  }

  .post-excerpt {
    color: var(--text-secondary);
    line-height: 1.6;
    margin: 0;
  }

  .category-page {
    max-width: 100%;
  }

  .category-header {
    margin-bottom: 2rem;
    text-align: left;
  }

  .category-description {
    color: var(--text-secondary);
    font-size: 1.125rem;
    margin-top: 0.5rem;
  }

  .category-posts {
    margin-bottom: 3rem;
  }

  .category-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem 0;
    border-top: 1px solid var(--border-secondary);
    margin-top: 2rem;
  }

  .nav-link {
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.25rem;
    background: var(--bg-card);
    color: var(--text-primary);
    text-decoration: none;
    border: 1px solid var(--border-secondary);
    border-radius: 0.75rem;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    background: var(--bg-card-hover);
    border-color: var(--accent-primary);
    transform: translateY(-1px);
  }

  @media (max-width: 640px) {
    .category-navigation {
      flex-direction: column;
      gap: 1rem;
    }

    .nav-link {
      width: 100%;
      justify-content: center;
    }
  }
</style>
