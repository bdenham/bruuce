---
import config from 'virtual:starlight/user-config';
import type { Props } from '@astrojs/starlight/props';
import LanguageSelect from 'virtual:starlight/components/LanguageSelect';
import Search from 'virtual:starlight/components/Search';
import SiteTitle from 'virtual:starlight/components/SiteTitle';
import SocialIcons from 'virtual:starlight/components/SocialIcons';
import ThemeSelect from 'virtual:starlight/components/ThemeSelect';
import Icon from './Icon.astro';
import { setBasePath } from '@utils/basePath';

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
  config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<div class="header sl-flex">
  <div class="title-wrapper sl-flex">
    <SiteTitle {...Astro.props} />
    <div class="sl-flex left-group">
      <a href={setBasePath('/get-started/')} class="header-link">Developers</a>
      <a href={setBasePath('/merchants/')} class="header-link">Merchants</a>
      <a href={setBasePath('/playgrounds/commerce-services/')} class="header-link">Playgrounds</a>
      <a href={setBasePath('/videos/')} class="header-link">Videos</a>
    </div>
  </div>
  <div class="sl-flex center-group">
    {shouldRenderSearch && <Search {...Astro.props} />}
  </div>
  <div class="sl-hidden md:sl-flex right-group">
    <div class="sl-flex social-icons">
      <a href={setBasePath('/superstar/')} aria-label="Storefront Superstart">
        <Icon
          name="seti:favicon"
          size="1.25rem"
          color="#f2cc7c"
          title="Storefront Superstars"
          label="Storefront Superstars"
          class="storefront-superstars"
        />
      </a>
      <SocialIcons {...Astro.props} />
    </div>
    <ThemeSelect {...Astro.props} />
    <LanguageSelect {...Astro.props} />
  </div>
</div>

<style>
  .header {
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
    overflow: hidden;
    margin-right: -1rem;
  }

  .center-group {
    align-items: center;
  }

  .left-group {
    gap: 0.5rem;
    align-items: center;
    padding: 0 2rem 0 1.5rem;
  }
  /* .left-group::after, */
  /* .left-group::before {
    content: '';
    height: 3rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  } */

  .right-group {
    padding: 0 1rem;
    align-items: center;
  }
  .social-icons {
    gap: 1.25rem;
    align-items: center;
  }
  .social-icons::after {
    content: '';
    height: 3rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
    margin-right: 1rem;
  }

  @media (min-width: 50rem) {
    :global(:root[data-has-sidebar]) {
      --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
    }
    :global(:root:not([data-has-toc])) {
      --__toc-width: 0rem;
    }
    .header {
      --__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
      --__main-column-fr: calc(
        (
            100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
              (2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
              var(--sl-content-width)
          ) / 2
      );
      display: grid;
      grid-template-columns:
        /* 1 (site title): runs up until the main content columnâ€™s left edge or the width of the title, whichever is the largest  */
        minmax(
          calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
          auto
        )
        /* 2 (search box): all free space that is available. */
        1fr
        /* 3 (right items): use the space that these need. */
        auto;
      align-content: center;
    }
  }

  /******************
  /* Header Links *
  /******************/

  .header-link {
    /* background-color: var(--sl-color-black); */
    /* min-width: 5rem; */
    /* border: 1px solid var(--sl-color-gray-5); */
    border-radius: 0.5rem;
    color: var(--sl-color-white);
    padding: 0.4rem 0.5rem;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.3s ease;
  }
  .header-link:hover {
    background-color: var(--sl-color-gray-6);
  }
  .header-link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  .header-link:focus-visible {
    box-shadow: none;
  }
</style>
