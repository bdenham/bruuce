---
export interface Props {
  variant?: 'default' | 'primary' | 'secondary';
  size?: 'small' | 'medium' | 'large';
  href?: string;
  external?: boolean;
  class?: string;
}

const {
  variant = 'default',
  size = 'medium',
  href,
  external = false,
  class: className = '',
} = Astro.props;

const tagClasses = [
  'tag',
  variant === 'primary' && 'primary',
  variant === 'secondary' && 'secondary',
  `tag--${size}`,
  className,
]
  .filter(Boolean)
  .join(' ');

const Element = href ? 'a' : 'span';
const elementProps = href
  ? {
      href,
      target: external ? '_blank' : undefined,
      rel: external ? 'noopener noreferrer' : undefined,
      'data-keyboard-hint': 'Press Enter to follow link',
    }
  : {};
---

<Element class={tagClasses} {...elementProps}>
  <slot />
  {href && external && ' â†—'}
</Element>

<style>
  .tag--small {
    font-size: 0.6875rem;
    padding: 2px 8px;
  }

  .tag--medium {
    font-size: 0.75rem;
    padding: 4px 12px;
  }

  .tag--large {
    font-size: 0.875rem;
    padding: 6px 16px;
  }

  .tag.secondary {
    background: var(--bg-secondary);
    color: var(--text-secondary);
    border-color: var(--border-secondary);
  }

  a.tag:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px var(--shadow-secondary);
  }
</style>
