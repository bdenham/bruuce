---
import { getCollection } from 'astro:content';

// Get current URL for active state highlighting
const currentPath = Astro.url.pathname;

// Get only the latest 2 blog posts to minimize DOM
const blogPosts = await getCollection('blog');
const latestPosts = blogPosts
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, 2); // Limit to 2 posts for performance
---

<aside class="sidebar" id="sidebar">

  <nav class="nav" id="nav">
    <!-- Close button for mobile (positioned at top right) -->
    <button class="close" id="close">Ã—</button>

    <!-- Ultra-minimal navigation - no nested spans -->
    <div class="section">
      <a href="/" class={currentPath === '/' ? 'active' : ''}>Home</a>
      <a href="/about/" class={currentPath.startsWith('/about') ? 'active' : ''}>About Me</a>
      <a href="/work/" class={currentPath.startsWith('/work') ? 'active' : ''}>My Work</a>
      <a href="/resume/" class={currentPath.startsWith('/resume') ? 'active' : ''}>My Resume</a>
      <a href="/projects/" class={currentPath.startsWith('/projects') ? 'active' : ''}
        >My Projects</a
      >
      <a href="/blog/" class={currentPath.startsWith('/blog/') ? 'active' : ''}>My Blog</a>
    </div>

    <!-- Minimal blog section - max 2 posts -->
    <div class="section">
      <h3>Recent Posts</h3>
      {
        latestPosts.map((post) => (
          <a
            href={`/blog/${post.slug}/`}
            class={currentPath === `/blog/${post.slug}/` ? 'active' : ''}
          >
            {post.data.title.length > 25
              ? post.data.title.substring(0, 25) + '...'
              : post.data.title}
          </a>
        ))
      }
    </div>

    <!-- Minimal connect -->
    <div class="section">
      <h3>Let's Connect!</h3>
      <a href="https://linkedin.com/in/brucedenham/" target="_blank" rel="noopener">LinkedIn</a>
      <a href="https://github.com/bdenham" target="_blank" rel="noopener">GitHub</a>
    </div>
  </nav>

  <!-- Single overlay element -->
  <div class="overlay" id="overlay"></div>
</aside>

<style>
  /* Minimal sidebar styles - maximum performance */
  .sidebar {
    position: fixed;
    top: 70px; /* Standard header height */
    left: 0;
    height: calc(100vh - 60px); /* Adjust height to account for header */
    width: 280px;
    z-index: 200;
  }


  .nav {
    background: var(--bg-tertiary);
    height: 100%;
    overflow-y: auto;
    padding: 0;
    border-right: 1px solid var(--border-primary);
    position: relative; /* Relative positioning on desktop */
  }

  .close {
    background: none;
    border: none;
    font-size: 1.25rem;
    color: var(--text-secondary);
    cursor: pointer;
    display: none;
    position: absolute;
    top: 16px; /* Reduced from 16px to pull it higher */
    right: 16px; /* Also reduce right spacing */
    z-index: 370;
  }

  /* Flat section structure - no nested elements */
  .section {
    margin-bottom: 24px; /* Add spacing between sections */
    padding: 0; /* Remove padding from section */
  }

  .section:first-of-type {
    padding-top: 0; /* Consistent top spacing for both desktop and mobile */
  }

  .section h3 {
    padding: 12px 24px 12px 32px;
    font-size: 1rem;
    font-weight: 600;
    color: var(--accent-primary); /* Use primary accent color instead of yellow */
    /* text-transform: uppercase; */
    /* letter-spacing: .5px; */
  }

  .section h3 a {
    color: inherit;
    text-decoration: none;
    display: inline; /* Keep it inline like regular text */
  }

  .section h3 a:hover {
    color: var(--accent-primary);
  }

  /* Minimal link styling - single element */
  .section a {
    display: block;
    padding: 0.5rem 1.5rem 0.5rem 2rem;/* Extra left padding for better visual spacing */
    color: var(--text-secondary);
    text-decoration: none;
    border-radius: 0;
    font-size: 1rem;
    font-weight: 300; 
    margin: 0 0 0 0;
  }

  .section a:hover {
    color: var(--accent-primary);
    background: var(--sidebar-background);
  }

  .section a.active {
    color: var(--accent-primary);
    background: var(--sidebar-background);
    font-weight: 500;
  }

  /* Hide overlay completely on desktop */
  .overlay {
    display: none;
  }

  /* Mobile - fixed positioning and z-index */
  @media (max-width: 1023px) {
    .sidebar {
      z-index: 0; /* Fix: Don't block back button */
      display: contents; /* Make container transparent to layout - fixes Back to Home clicking! */
    }


    .nav {
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      position: fixed;
      top: 60px; /* Start below header on mobile too */
      height: calc(100vh - 60px); /* Adjust height for header */
      width: 280px;
      z-index: 350; /* Above overlay, below toggle */
    }

    .sidebar.open .nav {
      transform: translateX(0);
    }

    .close {
      display: block;
      z-index: 360; /* Above nav content */
      position: relative;
    }

    .overlay {
      display: block; /* Show overlay only on mobile */
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.3);
      opacity: 0;
      visibility: hidden;
      transition:
        opacity 0.3s ease,
        visibility 0.3s ease;
      z-index: 250; /* Below sidebar but above content */
      pointer-events: none;
    }

    .sidebar.open .overlay {
      opacity: 1;
      visibility: visible;
      pointer-events: auto;
    }

    /* Ensure nav links work properly on mobile */
    .sidebar.open .nav a {
      pointer-events: auto;
      position: relative;
      z-index: 360;
    }

    /* Adjust mobile section padding to account for close button */
    .sidebar.open .section:first-of-type {
      padding-top: 28px; /* Minimal padding to match desktop visual spacing */
      margin-top: -8px; /* Negative margin to pull content up further */
    }

    /* Mobile touch target improvements */
    .section a {
      padding: 16px 24px 16px 32px; /* Larger touch targets on mobile with extra left padding */
      margin-bottom: 8px; /* More space between links on mobile */
      font-size: 1.1rem; /* Slightly larger text on mobile for better readability */
    }

    .section {
      margin-bottom: 32px; /* More space between sections on mobile */
    }
  }

  /* Global body class for sidebar open state */
  :global(body.sidebar-open) {
    overflow: hidden !important;
  }
</style>

<script>
  // Performance-optimized sidebar with proper cleanup to prevent TBT spikes
  let sidebarCleanup = null;

  function initSidebar() {
    // Clean up previous listeners to prevent accumulation (fixes 240ms TBT spikes)
    if (sidebarCleanup) {
      sidebarCleanup();
    }

    // Ensure body class is clean on page load
    document.body.classList.remove('sidebar-open');

    const sidebar = document.getElementById('sidebar');
    const toggle = document.getElementById('mobile-menu-toggle'); // Updated to use header toggle
    const close = document.getElementById('close');
    const overlay = document.getElementById('overlay');

    if (!sidebar || !toggle) return;

    function closeNav() {
      sidebar?.classList.remove('open');
      document.body.classList.remove('sidebar-open');
    }

    function toggleSidebar() {
      if (sidebar?.classList.contains('open')) {
        closeNav();
      } else {
        sidebar?.classList.add('open');
        document.body.classList.add('sidebar-open');
      }
    }

    // Create named handlers for cleanup tracking
    const handleEscape = (e) => {
      if (e.key === 'Escape' && sidebar?.classList.contains('open')) {
        closeNav();
      }
    };

    // Add listeners
    toggle?.addEventListener('click', toggleSidebar);
    close?.addEventListener('click', closeNav);
    overlay?.addEventListener('click', closeNav);
    document.addEventListener('keydown', handleEscape);

    // Mobile link handling with cleanup tracking
    const mobileLinks = [];
    if (window.matchMedia('(max-width: 1023px)').matches) {
      document.querySelectorAll('.section a[href^="/"]').forEach((link) => {
        link.addEventListener('click', closeNav);
        mobileLinks.push(link);
      });
    }

    // Store cleanup function to remove ALL listeners
    sidebarCleanup = () => {
      toggle?.removeEventListener('click', toggleSidebar);
      close?.removeEventListener('click', closeNav);
      overlay?.removeEventListener('click', closeNav);
      document.removeEventListener('keydown', handleEscape);
      mobileLinks.forEach((link) => link.removeEventListener('click', closeNav));
    };
  }

  // Defer initialization to reduce main thread blocking
  function deferredInit() {
    if (window.requestIdleCallback) {
      window.requestIdleCallback(initSidebar);
    } else {
      setTimeout(initSidebar, 0);
    }
  }

  // Initialize once on page load (deferred)
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', deferredInit);
  } else {
    deferredInit();
  }

  // Clean re-initialization after view transitions
  document.addEventListener('astro:after-swap', initSidebar);

  // Active links are handled server-side with Astro.url.pathname - no JavaScript needed!
</script>
