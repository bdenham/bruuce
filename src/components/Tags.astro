---
export interface Props {
  tags?: string[];
  category?: string;
  class?: string;
  showCategory?: boolean;
  showTags?: boolean;
}

const { 
  tags = [], 
  category, 
  class: className = '', 
  showCategory = false,
  showTags = false // Set to false to hide tags temporarily
} = Astro.props;

// Helper function to create tag URLs (for future implementation)
const getTagUrl = (tag: string) => `/blog/tag/${tag.toLowerCase().replace(/\s+/g, '-')}/`;
const getCategoryUrl = (cat: string) => `/blog/category/${cat.toLowerCase().replace(/\s+/g, '-')}/`;
---

{(category || tags.length > 0) && (
  <div class={`tags-container ${className}`}>
    {showCategory && category && (
      <div class="category-tag">
        <a href={getCategoryUrl(category)} class="category-link">
          <span class="category-icon">üìÅ</span>
          {category}
        </a>
      </div>
    )}
    
    {showTags && tags.length > 0 && (
      <div class="tags-list">
        {tags.map(tag => (
          <a href={getTagUrl(tag)} class="tag-link">
            {tag}
          </a>
        ))}
      </div>
    )}
  </div>
)}

<style>
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
    position: relative;
    z-index: 1;
  }

  .category-tag {
    margin-right: 0.75rem;
  }

  .category-link {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.375rem 0.75rem;
    background: var(--accent-primary);
    color: white;
    text-decoration: none;
    border-radius: 1rem;
    font-size: 0.875rem;
    font-weight: 600;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .category-link:hover {
    background: var(--accent-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag-link {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.625rem;
    background: var(--tag-bg);
    color: var(--tag-text);
    text-decoration: none;
    border: none;
    border-radius: 0.75rem;
    font-size: 0.8125rem;
    font-weight: 500;
    box-shadow: 0 1px 3px var(--shadow-secondary);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .tag-link:hover {
    background: var(--bg-card-hover);
    transform: translateY(-1px);
    box-shadow: 0 2px 8px var(--shadow-primary);
  }

  .category-icon {
    font-size: 0.75rem;
    opacity: 0.8;
  }

  /* Mobile responsive */
  @media (max-width: 640px) {
    .tags-container {
      margin: 0.75rem 0;
    }
    
    .category-link,
    .tag-link {
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
    }
  }
</style>
