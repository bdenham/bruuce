---
interface Props {
  square?: boolean;
  title?: string;
}

const { square = false, title } = Astro.props;
---

<div class="task-item" data-square={square}>
  {title && <h4 class="task-title">{title}</h4>}
  <slot />
</div>

<style>
  .task-item {
    --bullet-size: 2.5rem;
    border-radius: 8px;
    border: 1px solid var(--border-secondary);
    background: var(--bg-card);
    color: var(--text-secondary);
    padding: 1rem;
    margin-bottom: 1rem;
    position: relative;
    padding-left: calc(var(--bullet-size) + 1rem);
  }

  .task-item[data-square='true'] {
    border-radius: 4px;
  }

  .task-item::before {
    content: counter(task);
    position: absolute;
    left: 0.75rem;
    top: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--bullet-size);
    height: var(--bullet-size);
    background: var(--accent-primary);
    color: var(--text-primary);
    font-weight: 700;
    font-size: 1.1rem;
    border-radius: 50%;
    line-height: 1;
  }

  .task-item[data-square='true']::before {
    border-radius: 4px;
  }

  .task-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--text-primary);
  }

  .task-item :global(p) {
    margin-bottom: 0.75rem;
    color: var(--text-tertiary);
    line-height: 1.6;
  }

  .task-item :global(p:last-child) {
    margin-bottom: 0;
  }

  .task-item :global(ul),
  .task-item :global(ol) {
    margin-bottom: 0.75rem;
    padding-left: 1.5rem;
  }

  .task-item :global(li) {
    margin-bottom: 0.25rem;
    color: var(--text-tertiary);
  }

  .task-item :global(code) {
    background: var(--bg-primary);
    color: var(--accent-primary);
    padding: 0.1em 0.3em;
    border-radius: 3px;
    font-size: 0.9em;
    font-family: 'Courier New', Courier, 'Lucida Console', 'Monaco', monospace;
  }

  .task-item :global(strong) {
    color: var(--text-primary);
    font-weight: 600;
  }
</style>
