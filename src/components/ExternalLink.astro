---
interface Props {
  href: string;
  class?: string;
}

const { href, class: className } = Astro.props;
const isExternal = href?.startsWith('https://') || href?.startsWith('http://');
---

<a
  href={href}
  target={isExternal ? '_blank' : '_self'}
  rel={isExternal ? 'noopener noreferrer' : undefined}
  class:list={['external-markdown-link', className]}
>
  <slot />
  {isExternal && <span class="external-icon" aria-hidden="true" />}
</a>

<style>
  /* External link styling for automatically enhanced markdown links */
  .external-markdown-link {
    color: var(--color-primary);
    text-decoration: none;
  }

  .external-markdown-link:hover {
    text-decoration: underline;
  }

  .external-icon {
    display: inline-block;
    width: 0.9rem;
    height: 0.9rem;
    margin-left: 3px;
    background-color: currentColor;
    mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'/%3E%3Cpolyline points='15,3 21,3 21,9'/%3E%3Cline x1='10' y1='14' x2='21' y2='3'/%3E%3C/svg%3E")
      no-repeat center;
    mask-size: contain;
    -webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'/%3E%3Cpolyline points='15,3 21,3 21,9'/%3E%3Cline x1='10' y1='14' x2='21' y2='3'/%3E%3C/svg%3E")
      no-repeat center;
    -webkit-mask-size: contain;
    vertical-align: baseline;
  }

  /* Ensure proper alignment in Steps components */
  :global(.sl-steps) .external-markdown-link {
    display: inline;
    vertical-align: baseline;
  }

  :global(.sl-steps) .external-icon {
    vertical-align: baseline;
  }
</style>
